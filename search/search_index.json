{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0410\u0432\u0442\u043e\u0440: \u0424\u0438\u0440\u0441\u043e\u0432 \u0418\u043b\u044c\u044f 367588 \u0413\u0440\u0443\u043f\u043f\u0430: K3341","title":"Home"},{"location":"#_1","text":"\u0410\u0432\u0442\u043e\u0440: \u0424\u0438\u0440\u0441\u043e\u0432 \u0418\u043b\u044c\u044f 367588 \u0413\u0440\u0443\u043f\u043f\u0430: K3341","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lab1/1/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, server\u00bb, \u0438 \u043e\u043d\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0412 \u043e\u0442\u0432\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, client\u00bb, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket. \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 UDP. \u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 # Lr1/1/server.py import socket server_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) server_address = ('localhost', 12345) server_socket.bind(server_address) print(\"Server started and waiting for clients...\") while True: message, client_address = server_socket.recvfrom(1024) print(f\"Message from client: {message.decode()}\") response = \"Hello, client\" server_socket.sendto(response.encode(), client_address) # Lr1/1/server.py import socket client_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) server_address = ('localhost', 12345) message = \"Hello, server\" client_socket.sendto(message.encode(), server_address) response, server = client_socket.recvfrom(1024) print(f\"Server response: {response.decode()}\") client_socket.close()","title":"Task 1"},{"location":"lab1/1/#1","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, server\u00bb, \u0438 \u043e\u043d\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0412 \u043e\u0442\u0432\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, client\u00bb, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1:"},{"location":"lab1/1/#_1","text":"\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket. \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 UDP.","title":"\u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:"},{"location":"lab1/1/#_2","text":"# Lr1/1/server.py import socket server_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) server_address = ('localhost', 12345) server_socket.bind(server_address) print(\"Server started and waiting for clients...\") while True: message, client_address = server_socket.recvfrom(1024) print(f\"Message from client: {message.decode()}\") response = \"Hello, client\" server_socket.sendto(response.encode(), client_address) # Lr1/1/server.py import socket client_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) server_address = ('localhost', 12345) message = \"Hello, server\" client_socket.sendto(message.encode(), server_address) response, server = client_socket.recvfrom(1024) print(f\"Server response: {response.decode()}\") client_socket.close()","title":"\u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435"},{"location":"lab1/2/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 (\u041f\u043e\u0438\u0441\u043a \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u0442\u0440\u0430\u043f\u0435\u0446\u0438\u0438), \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0432\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b. \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443. \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket. \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 TCP. \u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u041f\u043e\u0447\u0442\u0438 \u0442\u043e \u0436\u0435, \u0447\u0442\u043e \u0438 \u0432 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u0438, \u0437\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c TCP # Lr1/2/server.py import socket def calculate_trapezoid_area(a, b, h): return ((a + b) / 2) * h server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_address = ('localhost', 65432) server_socket.bind(server_address) server_socket.listen(1) print(\"Server is running and waiting for connection...\") while True: connection, client_address = server_socket.accept() try: print(f\"Connected client: {client_address}\") data = connection.recv(1024).decode() print(f\"Received data: {data}\") a, b, h = map(float, data.split(', ')) area = calculate_trapezoid_area(a, b, h) connection.sendall(str(area).encode()) finally: connection.close() # Lr1/2/client.py import socket client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_address = ('localhost', 65432) client_socket.connect(server_address) try: print(\"Enter trapezoid parameters:\") a = float(input(\"Enter the first base (a): \")) b = float(input(\"Enter the second base (b): \")) h = float(input(\"Enter the height (h): \")) message = f\"{a}, {b}, {h}\" client_socket.sendall(message.encode()) result = client_socket.recv(1024).decode() print(f\"Trapezoid area: {result}\") finally: client_socket.close()","title":"Task 2"},{"location":"lab1/2/#2","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 (\u041f\u043e\u0438\u0441\u043a \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u0442\u0440\u0430\u043f\u0435\u0446\u0438\u0438), \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0432\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b. \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2"},{"location":"lab1/2/#_1","text":"\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket. \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 TCP.","title":"\u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:"},{"location":"lab1/2/#_2","text":"\u041f\u043e\u0447\u0442\u0438 \u0442\u043e \u0436\u0435, \u0447\u0442\u043e \u0438 \u0432 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u0438, \u0437\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c TCP # Lr1/2/server.py import socket def calculate_trapezoid_area(a, b, h): return ((a + b) / 2) * h server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_address = ('localhost', 65432) server_socket.bind(server_address) server_socket.listen(1) print(\"Server is running and waiting for connection...\") while True: connection, client_address = server_socket.accept() try: print(f\"Connected client: {client_address}\") data = connection.recv(1024).decode() print(f\"Received data: {data}\") a, b, h = map(float, data.split(', ')) area = calculate_trapezoid_area(a, b, h) connection.sendall(str(area).encode()) finally: connection.close() # Lr1/2/client.py import socket client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_address = ('localhost', 65432) client_socket.connect(server_address) try: print(\"Enter trapezoid parameters:\") a = float(input(\"Enter the first base (a): \")) b = float(input(\"Enter the second base (b): \")) h = float(input(\"Enter the height (h): \")) message = f\"{a}, {b}, {h}\" client_socket.sendall(message.encode()) result = client_socket.recv(1024).decode() print(f\"Trapezoid area: {result}\") finally: client_socket.close()","title":"\u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435"},{"location":"lab1/3/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443, \u0438 \u0432 \u043e\u0442\u0432\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 HTTP-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 index.html. \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket. \u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u042d\u043c\u0443\u043b\u0438\u0440\u0443\u0435\u043c HTTP-\u043e\u0442\u0432\u0435\u0442, \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043c\u043e\u0436\u043d\u043e, \u043f\u0435\u0440\u0435\u0439\u0434\u044f \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 # Lr1/3/server.py import socket def load_html(file_path): with open(file_path, 'r') as file: return file.read() server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_address = ('localhost', 8080) server_socket.bind(server_address) server_socket.listen(1) print(\"Server is running and waiting for connection...\") while True: connection, client_address = server_socket.accept() try: print(f\"Connected client: {client_address}\") html_content = load_html('static/index.html') http_response = f\"HTTP/1.1 200 OK\\r\\nContent-Type: text/html\\r\\nContent-Length: {len(html_content)}\\r\\n\\r\\n{html_content}\" connection.sendall(http_response.encode()) finally: connection.close()","title":"Task 3"},{"location":"lab1/3/#3","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443, \u0438 \u0432 \u043e\u0442\u0432\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 HTTP-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 index.html.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3:"},{"location":"lab1/3/#_1","text":"\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket.","title":"\u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:"},{"location":"lab1/3/#_2","text":"\u042d\u043c\u0443\u043b\u0438\u0440\u0443\u0435\u043c HTTP-\u043e\u0442\u0432\u0435\u0442, \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043c\u043e\u0436\u043d\u043e, \u043f\u0435\u0440\u0435\u0439\u0434\u044f \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 # Lr1/3/server.py import socket def load_html(file_path): with open(file_path, 'r') as file: return file.read() server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_address = ('localhost', 8080) server_socket.bind(server_address) server_socket.listen(1) print(\"Server is running and waiting for connection...\") while True: connection, client_address = server_socket.accept() try: print(f\"Connected client: {client_address}\") html_content = load_html('static/index.html') http_response = f\"HTTP/1.1 200 OK\\r\\nContent-Type: text/html\\r\\nContent-Length: {len(html_content)}\\r\\n\\r\\n{html_content}\" connection.sendall(http_response.encode()) finally: connection.close()","title":"\u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435"},{"location":"lab1/4/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 4: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442. \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket. \u0414\u043b\u044f \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0447\u0430\u0442\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 threading. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f: \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b TCP \u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0421\u043b\u0443\u0448\u0430\u0435\u043c \u043f\u043e\u0440\u0442, \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u043c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0432 \u043d\u043e\u0432\u044b\u0439 \u043f\u043e\u0442\u043e\u043a \u0441 \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u044b\u043c \u0446\u0438\u043a\u043b\u043e\u043c, \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u044e\u0449\u0438\u043c \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0435 \u0441\u043e\u0431\u044b\u0442\u0438\u044f. \u0411\u0435\u0437 \u043f\u043e\u0442\u043e\u043a\u043e\u0432 \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0439 \u0446\u0438\u043a\u043b \u0431\u044b \u0437\u0430\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u043b \u043f\u043e\u0442\u043e\u043a \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u0431\u044b \u043d\u0435 \u0441\u043c\u043e\u0433 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f. # LR1/4/client.py import socket import threading def receive_messages(client_socket): while True: try: message = client_socket.recv(1024).decode() if message: print(f\"\\n{message}\") else: break except: print(\"Connection closed by server\") client_socket.close() break client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_address = ('localhost', 5555) client_socket.connect(server_address) receive_thread = threading.Thread(target=receive_messages, args=(client_socket,)) receive_thread.start() try: while True: message = input(\"You: \") client_socket.send(message.encode()) except KeyboardInterrupt: print(\"Exiting chat...\") client_socket.close() \u041a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u0432 \u0440\u0430\u0437\u043d\u044b\u0445 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430\u0445 (\u0432\u043a\u043b\u0430\u0434\u043a\u0430\u0445/\u043e\u043a\u043d\u0430\u0445 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u0430) # Lr1/4/server.py import socket import threading clients = [] def connect_client(client_socket, client_address): print(f\"New connection from {client_address}\") clients.append(client_socket) try: while True: message = client_socket.recv(1024).decode() if not message: break print(f\"Received message from {client_address}: {message}\") broadcast(message, client_socket) finally: # removing client when disconnected clients.remove(client_socket) client_socket.close() print(f\"Connection closed for {client_address}\") def broadcast(message, sender_socket): for client in clients: if client != sender_socket: try: client.send(message.encode()) except: # removing client if sending fails clients.remove(client) client.close() server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_address = ('localhost', 5555) server_socket.bind(server_address) server_socket.listen(5) print(\"Server is running and waiting for connections...\") while True: client_socket, client_address = server_socket.accept() # start a new thread for each client client_thread = threading.Thread(target=connect_client, args=(client_socket, client_address)) client_thread.start()","title":"Task 4"},{"location":"lab1/4/#4","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 4:"},{"location":"lab1/4/#_1","text":"\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket. \u0414\u043b\u044f \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0447\u0430\u0442\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 threading.","title":"\u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:"},{"location":"lab1/4/#_2","text":"\u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b TCP","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f:"},{"location":"lab1/4/#_3","text":"\u0421\u043b\u0443\u0448\u0430\u0435\u043c \u043f\u043e\u0440\u0442, \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u043c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0432 \u043d\u043e\u0432\u044b\u0439 \u043f\u043e\u0442\u043e\u043a \u0441 \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u044b\u043c \u0446\u0438\u043a\u043b\u043e\u043c, \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u044e\u0449\u0438\u043c \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0435 \u0441\u043e\u0431\u044b\u0442\u0438\u044f. \u0411\u0435\u0437 \u043f\u043e\u0442\u043e\u043a\u043e\u0432 \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0439 \u0446\u0438\u043a\u043b \u0431\u044b \u0437\u0430\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u043b \u043f\u043e\u0442\u043e\u043a \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u0431\u044b \u043d\u0435 \u0441\u043c\u043e\u0433 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f. # LR1/4/client.py import socket import threading def receive_messages(client_socket): while True: try: message = client_socket.recv(1024).decode() if message: print(f\"\\n{message}\") else: break except: print(\"Connection closed by server\") client_socket.close() break client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_address = ('localhost', 5555) client_socket.connect(server_address) receive_thread = threading.Thread(target=receive_messages, args=(client_socket,)) receive_thread.start() try: while True: message = input(\"You: \") client_socket.send(message.encode()) except KeyboardInterrupt: print(\"Exiting chat...\") client_socket.close() \u041a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u0432 \u0440\u0430\u0437\u043d\u044b\u0445 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430\u0445 (\u0432\u043a\u043b\u0430\u0434\u043a\u0430\u0445/\u043e\u043a\u043d\u0430\u0445 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u0430) # Lr1/4/server.py import socket import threading clients = [] def connect_client(client_socket, client_address): print(f\"New connection from {client_address}\") clients.append(client_socket) try: while True: message = client_socket.recv(1024).decode() if not message: break print(f\"Received message from {client_address}: {message}\") broadcast(message, client_socket) finally: # removing client when disconnected clients.remove(client_socket) client_socket.close() print(f\"Connection closed for {client_address}\") def broadcast(message, sender_socket): for client in clients: if client != sender_socket: try: client.send(message.encode()) except: # removing client if sending fails clients.remove(client) client.close() server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_address = ('localhost', 5555) server_socket.bind(server_address) server_socket.listen(5) print(\"Server is running and waiting for connections...\") while True: client_socket, client_address = server_socket.accept() # start a new thread for each client client_thread = threading.Thread(target=connect_client, args=(client_socket, client_address)) client_thread.start()","title":"\u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435"},{"location":"lab1/5/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 5: \u041d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u0432\u0435\u0431-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 GET \u0438 POST HTTP-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket \u0432 Python. \u0421\u0435\u0440\u0432\u0435\u0440 \u0434\u043e\u043b\u0436\u0435\u043d: \u041f\u0440\u0438\u043d\u044f\u0442\u044c \u0438 \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0438 \u043e\u0446\u0435\u043d\u043a\u0435 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435. \u041e\u0442\u0434\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043e\u0446\u0435\u043d\u043a\u0430\u0445 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430\u043c \u0432 \u0432\u0438\u0434\u0435 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b. \u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435: \u0425\u0440\u0430\u043d\u0438\u043c \u043e\u0446\u0435\u043d\u043a\u0438 \u0441\u043b\u043e\u0432\u0430\u0440\u0435\u043c \u0432 \u043f\u0430\u043c\u044f\u0442\u0438, \u043d\u0430 \u043b\u0435\u0442\u0443 \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c HTML \u0438\u0437 \u0437\u0430\u0445\u0430\u0440\u0434\u043a\u043e\u0436\u0435\u043d\u043d\u044b\u0445 \u0447\u0430\u0441\u0442\u0435\u0439, \u044e\u0437\u0435\u0440 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0438 \u0434\u0430\u043b\u044c\u0448\u0435 \u043c\u043e\u0436\u0435\u0442 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0441 \u043d\u0435\u0439, \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u044f POST-\u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0444\u043e\u0440\u043c\u044b. \u0427\u0442\u043e\u0431\u044b \u043f\u043e\u0442\u044b\u043a\u0430\u0442\u044c (\u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430): \u0442\u044b\u043a # Lr1/5/server.py import socket import urllib.parse grades = {} def handle_client(client_socket): request_data = client_socket.recv(1024).decode() if not request_data: client_socket.close() return request_lines = request_data.split('\\r\\n') request_line = request_lines[0] method, path, version = request_line.split() if method == 'POST': try: empty_line_index = request_lines.index('') except ValueError: client_socket.close() return headers = request_lines[1:empty_line_index] body = '\\r\\n'.join(request_lines[empty_line_index + 1:]) content_length = 0 for header in headers: if header.startswith('Content-Length'): content_length = int(header.split(':')[1].strip()) break # if body is incomplete, read the rest while len(body.encode()) < content_length: body += client_socket.recv(1024).decode() # parse the body (assuming application/x-www-form-urlencoded) params = urllib.parse.parse_qs(body) # store the subject and grade subject = params.get('subject', [''])[0] grade = params.get('grade', [''])[0] if subject and grade: grades[subject] = grade response = 'HTTP/1.1 200 OK\\r\\nContent-Type: text/html\\r\\n\\r\\n' response += '<html><body><h1>Data Received</h1>' response += f'<p>Subject: {subject}</p>' response += f'<p>Grade: {grade}</p>' response += '<p><a href=\"/\">Go back</a></p>' response += '</body></html>' client_socket.sendall(response.encode()) elif method == 'GET': html_content = '<html><body><h1>Grades</h1>' if grades: html_content += '<ul>' for subject, grade in grades.items(): html_content += f'<li>{subject}: {grade}</li>' html_content += '</ul>' else: html_content += '<p>No grades available.</p>' html_content += ''' <h2>Add New Grade</h2> <form method=\"POST\" action=\"/\"> Subject: <input type=\"text\" name=\"subject\"><br> Grade: <input type=\"text\" name=\"grade\"><br> <input type=\"submit\" value=\"Submit\"> </form> ''' html_content += '</body></html>' response = 'HTTP/1.1 200 OK\\r\\nContent-Type: text/html\\r\\n\\r\\n' + html_content client_socket.sendall(response.encode()) else: response = 'HTTP/1.1 405 Method Not Allowed\\r\\n\\r\\n' client_socket.sendall(response.encode()) client_socket.close() def run_server(): server_address = ('', 8080) server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_socket.bind(server_address) server_socket.listen(5) print('Server is running on port 8080...') while True: client_socket, client_address = server_socket.accept() handle_client(client_socket) if __name__ == '__main__': run_server()","title":"Task 5"},{"location":"lab1/5/#5","text":"\u041d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u0432\u0435\u0431-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 GET \u0438 POST HTTP-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket \u0432 Python.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 5:"},{"location":"lab1/5/#_1","text":"\u041f\u0440\u0438\u043d\u044f\u0442\u044c \u0438 \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0438 \u043e\u0446\u0435\u043d\u043a\u0435 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435. \u041e\u0442\u0434\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043e\u0446\u0435\u043d\u043a\u0430\u0445 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430\u043c \u0432 \u0432\u0438\u0434\u0435 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b.","title":"\u0421\u0435\u0440\u0432\u0435\u0440 \u0434\u043e\u043b\u0436\u0435\u043d:"},{"location":"lab1/5/#_2","text":"\u0425\u0440\u0430\u043d\u0438\u043c \u043e\u0446\u0435\u043d\u043a\u0438 \u0441\u043b\u043e\u0432\u0430\u0440\u0435\u043c \u0432 \u043f\u0430\u043c\u044f\u0442\u0438, \u043d\u0430 \u043b\u0435\u0442\u0443 \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c HTML \u0438\u0437 \u0437\u0430\u0445\u0430\u0440\u0434\u043a\u043e\u0436\u0435\u043d\u043d\u044b\u0445 \u0447\u0430\u0441\u0442\u0435\u0439, \u044e\u0437\u0435\u0440 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0438 \u0434\u0430\u043b\u044c\u0448\u0435 \u043c\u043e\u0436\u0435\u0442 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0441 \u043d\u0435\u0439, \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u044f POST-\u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0444\u043e\u0440\u043c\u044b. \u0427\u0442\u043e\u0431\u044b \u043f\u043e\u0442\u044b\u043a\u0430\u0442\u044c (\u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430): \u0442\u044b\u043a # Lr1/5/server.py import socket import urllib.parse grades = {} def handle_client(client_socket): request_data = client_socket.recv(1024).decode() if not request_data: client_socket.close() return request_lines = request_data.split('\\r\\n') request_line = request_lines[0] method, path, version = request_line.split() if method == 'POST': try: empty_line_index = request_lines.index('') except ValueError: client_socket.close() return headers = request_lines[1:empty_line_index] body = '\\r\\n'.join(request_lines[empty_line_index + 1:]) content_length = 0 for header in headers: if header.startswith('Content-Length'): content_length = int(header.split(':')[1].strip()) break # if body is incomplete, read the rest while len(body.encode()) < content_length: body += client_socket.recv(1024).decode() # parse the body (assuming application/x-www-form-urlencoded) params = urllib.parse.parse_qs(body) # store the subject and grade subject = params.get('subject', [''])[0] grade = params.get('grade', [''])[0] if subject and grade: grades[subject] = grade response = 'HTTP/1.1 200 OK\\r\\nContent-Type: text/html\\r\\n\\r\\n' response += '<html><body><h1>Data Received</h1>' response += f'<p>Subject: {subject}</p>' response += f'<p>Grade: {grade}</p>' response += '<p><a href=\"/\">Go back</a></p>' response += '</body></html>' client_socket.sendall(response.encode()) elif method == 'GET': html_content = '<html><body><h1>Grades</h1>' if grades: html_content += '<ul>' for subject, grade in grades.items(): html_content += f'<li>{subject}: {grade}</li>' html_content += '</ul>' else: html_content += '<p>No grades available.</p>' html_content += ''' <h2>Add New Grade</h2> <form method=\"POST\" action=\"/\"> Subject: <input type=\"text\" name=\"subject\"><br> Grade: <input type=\"text\" name=\"grade\"><br> <input type=\"submit\" value=\"Submit\"> </form> ''' html_content += '</body></html>' response = 'HTTP/1.1 200 OK\\r\\nContent-Type: text/html\\r\\n\\r\\n' + html_content client_socket.sendall(response.encode()) else: response = 'HTTP/1.1 405 Method Not Allowed\\r\\n\\r\\n' client_socket.sendall(response.encode()) client_socket.close() def run_server(): server_address = ('', 8080) server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_socket.bind(server_address) server_socket.listen(5) print('Server is running on port 8080...') while True: client_socket, client_address = server_socket.accept() handle_client(client_socket) if __name__ == '__main__': run_server()","title":"\u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435:"},{"location":"lab2/","text":"Flights Board \u041e\u0431\u0437\u043e\u0440 Flights Board \u2014 \u044d\u0442\u043e Django-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435, \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0435\u0435 \u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0443 \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0440\u0435\u0439\u0441\u0430\u0445, \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u0435\u0441\u0442, \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\u043c\u0438 \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043e \u0440\u0435\u0439\u0441\u0430\u0445. \u0412 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0438 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u0438\u0432\u043d\u0430\u044f \u043f\u0430\u043d\u0435\u043b\u044c \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0440\u0435\u0439\u0441\u0430\u043c\u0438. \u0417\u0430\u0434\u0430\u043d\u0438\u0435: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0432\u0435\u0431 \u0441\u0435\u0440\u0432\u0438\u0441, \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u043c \u0438\u0437 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0412\u0430\u0440\u0438\u0430\u043d\u0442 3: \u0422\u0430\u0431\u043b\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431 \u0430\u0432\u0438\u0430\u043f\u0435\u0440\u0435\u043b\u0435\u0442\u0430\u0445 \u0425\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043d\u043e\u043c\u0435\u0440\u0435 \u0440\u0435\u0439\u0441\u0430, \u0430\u0432\u0438\u0430\u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438, \u043e\u0442\u043b\u0435\u0442\u0435, \u043f\u0440\u0438\u043b\u0435\u0442\u0435, \u0442\u0438\u043f\u0435 (\u043f\u0440\u0438\u043b\u0435\u0442, \u043e\u0442\u043b\u0435\u0442), \u043d\u043e\u043c\u0435\u0440\u0435 \u0433\u0435\u0439\u0442\u0430. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: - \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. - \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0438 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u0435\u0441\u0442 \u043d\u0430 \u0440\u0435\u0439\u0441\u0430\u0445. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0441\u0432\u043e\u0438\u0445 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439. - \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043d\u0430 \u0440\u0435\u0439\u0441 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u0430 \u0438 \u0432\u043f\u0438\u0441\u0430\u0442\u044c \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u043d\u043e\u043c\u0435\u0440 \u0435\u0433\u043e \u0431\u0438\u043b\u0435\u0442\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin. - \u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0449\u0430\u044f \u0432\u0441\u0435\u0445 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432 \u0440\u0435\u0439\u0441\u0430. - \u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043a \u0440\u0435\u0439\u0441\u0430\u043c. \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432, \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f \u0434\u0430\u0442\u0430 \u0440\u0435\u0439\u0441\u0430, \u0442\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f, \u0440\u0435\u0439\u0442\u0438\u043d\u0433 (1-10), \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0442\u043e\u0440\u0435. \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f: - \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u0435\u043d\u044e - \u0420\u0435\u0430\u043b\u0438\u0437\u0432\u0430\u0442\u044c \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446 - \u0412\u043d\u0435\u0434\u0440\u0438\u0442\u044c \u043f\u043e\u0438\u0441\u043a \u043f\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c, \u0441 \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u0430 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044f \u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435 \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u041c\u043e\u0434\u0435\u043b\u0438 \u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0440\u0435\u0439\u0441\u0430\u043c\u0438 \u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\u043c\u0438 \u041e\u0442\u0437\u044b\u0432\u044b \u043e \u0440\u0435\u0439\u0441\u0430\u0445 \u041f\u043e\u0438\u0441\u043a \u0438 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044f \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u041a\u043b\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f bash git clone <repository-url> cd flights_board \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439 bash pip install -r requirements.txt \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0412 \u0444\u0430\u0439\u043b\u0435 settings.py \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u0442\u0435 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 PostgreSQL: python DATABASES = { 'default': { 'ENGINE': 'django.db.backends.postgresql', 'NAME': 'postgres', 'USER': 'postgres', 'PASSWORD': 'postgres', 'HOST': 'localhost', 'PORT': '5431', } } \u041f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0439 bash python manage.py migrate \u0417\u0430\u043f\u0443\u0441\u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 bash python manage.py runserver \u041c\u043e\u0434\u0435\u043b\u0438 \u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u043d\u0430\u0445\u043e\u0434\u044f\u0442\u0441\u044f \u0432 flights_board/flights/models.py : Flight (\u0420\u0435\u0439\u0441): \u0425\u0440\u0430\u043d\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0440\u0435\u0439\u0441\u0435, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u043d\u043e\u043c\u0435\u0440, \u0430\u0432\u0438\u0430\u043a\u043e\u043c\u043f\u0430\u043d\u0438\u044e, \u0432\u0440\u0435\u043c\u044f \u0432\u044b\u043b\u0435\u0442\u0430 \u0438 \u043f\u0440\u0438\u043b\u0435\u0442\u0430, \u043d\u043e\u043c\u0435\u0440 \u0433\u0435\u0439\u0442\u0430. Reservation (\u0411\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435): \u0421\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0441 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u043c\u0438 \u0440\u0435\u0439\u0441\u0430\u043c\u0438, \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044f \u043c\u0435\u0441\u0442\u043e \u0438 \u043d\u043e\u043c\u0435\u0440 \u0431\u0438\u043b\u0435\u0442\u0430. Review (\u041e\u0442\u0437\u044b\u0432): \u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u043e\u0442\u0437\u044b\u0432 \u043e \u0440\u0435\u0439\u0441\u0435, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0442\u0435\u043a\u0441\u0442, \u0440\u0435\u0439\u0442\u0438\u043d\u0433 \u0438 \u0434\u0430\u0442\u0443. \u041f\u0440\u0438\u043c\u0435\u0440 \u043c\u043e\u0434\u0435\u043b\u0438 Flight : class Flight(models.Model): flight_number = models.CharField(max_length=10) airline = models.CharField(max_length=50) departure = models.DateTimeField() arrival = models.DateTimeField() gate_number = models.CharField(max_length=5) \u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f : /signup/ , \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 UserCreationForm . \u0412\u0445\u043e\u0434/\u0412\u044b\u0445\u043e\u0434 : /login/ \u0434\u043b\u044f \u0432\u0445\u043e\u0434\u0430, POST-\u0437\u0430\u043f\u0440\u043e\u0441 \u043f\u043e /logout/ \u0434\u043b\u044f \u0432\u044b\u0445\u043e\u0434\u0430. \u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0440\u0435\u0439\u0441\u0430\u043c\u0438 \u0421\u043f\u0438\u0441\u043e\u043a \u0440\u0435\u0439\u0441\u043e\u0432 \u0413\u043b\u0430\u0432\u043d\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 / \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0440\u0435\u0439\u0441\u043e\u0432 \u0441 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c\u044e \u043f\u043e\u0438\u0441\u043a\u0430 \u043f\u043e \u043d\u043e\u043c\u0435\u0440\u0443 \u0438\u043b\u0438 \u0430\u0432\u0438\u0430\u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438. \u0414\u0435\u0442\u0430\u043b\u0438 \u0440\u0435\u0439\u0441\u0430 \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0434\u0435\u0442\u0430\u043b\u044f\u043c\u0438 \u0440\u0435\u0439\u0441\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430 \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 /flight/<flight_id>/ , \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044f \u043e\u0441\u043d\u043e\u0432\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e, \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432 \u0438 \u043e\u0442\u0437\u044b\u0432\u044b. \u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\u043c\u0438 \u0411\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u0435\u0441\u0442\u0430 \u2014 /flight/<flight_id>/reserve/ \u0441 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u043e\u0439 \u0437\u0430\u043d\u044f\u0442\u043e\u0441\u0442\u0438 \u043c\u0435\u0441\u0442\u0430. \u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u2014 /reservation/<reservation_id>/edit/ . \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u2014 POST-\u0437\u0430\u043f\u0440\u043e\u0441 \u043f\u043e /reservation/<reservation_id>/delete/ . \u041f\u0440\u0438\u043c\u0435\u0440 \u043a\u043e\u0434\u0430 \u0434\u043b\u044f \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u0435\u0441\u0442\u0430: @login_required def reserve_seat(request, flight_id): flight = get_object_or_404(Flight, id=flight_id) if request.method == 'POST': seat_number = request.POST.get('seat_number') if Reservation.objects.filter(flight=flight, seat_number=seat_number).exists(): return render(request, 'reserve_seat.html', { 'flight': flight, 'error': \"\u042d\u0442\u043e \u043c\u0435\u0441\u0442\u043e \u0443\u0436\u0435 \u0437\u0430\u043d\u044f\u0442\u043e. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0434\u0440\u0443\u0433\u043e\u0435.\" }) Reservation.objects.create(user=request.user, flight=flight, seat_number=seat_number) return redirect('my_reservations') return render(request, 'reserve_seat.html', {'flight': flight}) \u041e\u0442\u0437\u044b\u0432\u044b \u043e \u0440\u0435\u0439\u0441\u0430\u0445 \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u043c\u043e\u0433\u0443\u0442 \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u043e\u0442\u0437\u044b\u0432\u044b \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0440\u0435\u0439\u0441\u0430, \u0432\u043a\u043b\u044e\u0447\u0430\u044f: - \u0420\u0435\u0439\u0442\u0438\u043d\u0433 (\u043e\u0442 1 \u0434\u043e 10) - \u0422\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f - \u0414\u0430\u0442\u0430 \u0438 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0442\u043e\u0440\u0435 \u0424\u043e\u0440\u043c\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u0430: @login_required def add_review(request, flight_id): flight = get_object_or_404(Flight, id=flight_id) if request.method == 'POST': rating = request.POST['rating'] comment_text = request.POST['comment_text'] Review.objects.create(flight=flight, user=request.user, rating=rating, comment_text=comment_text) return redirect('flight_list') return render(request, 'add_review.html', {'flight': flight}) \u041f\u043e\u0438\u0441\u043a \u0438 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044f \u0412 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u044b \u043f\u043e\u0438\u0441\u043a \u0438 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044f \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430\u0445 \u0441\u043f\u0438\u0441\u043a\u0430 \u0440\u0435\u0439\u0441\u043e\u0432 \u0438 \u043b\u0438\u0447\u043d\u044b\u0445 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439. \u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u043e\u0438\u0441\u043a\u0430 \u0432 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u0441\u043f\u0438\u0441\u043a\u0430 \u0440\u0435\u0439\u0441\u043e\u0432: class FlightListView(ListView): model = Flight template_name = 'flight_list.html' paginate_by = 2 def get_queryset(self): query = self.request.GET.get('q') queryset = Flight.objects.all() if query: queryset = queryset.filter( flight_number__icontains=query ) | queryset.filter( airline__icontains=query ) return queryset \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u041c\u0435\u043d\u044e \u041d\u0430 \u043a\u0430\u0436\u0434\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0435 \u043c\u0435\u043d\u044e \u0441 \u0441\u0441\u044b\u043b\u043a\u0430\u043c\u0438 \u043d\u0430 \u0441\u043f\u0438\u0441\u043e\u043a \u0440\u0435\u0439\u0441\u043e\u0432, \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044e, \u0432\u0445\u043e\u0434/\u0432\u044b\u0445\u043e\u0434 \u0438 \u043b\u0438\u0447\u043d\u044b\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u041f\u0440\u0438\u043c\u0435\u0440 \u043c\u0435\u043d\u044e \u0432 \u0448\u0430\u0431\u043b\u043e\u043d\u0435 base.html : <nav class=\"main-nav\"> <ul class=\"navbar-left\"> <li><a href=\"{% url 'flight_list' %}\">\u0421\u043f\u0438\u0441\u043e\u043a \u0440\u0435\u0439\u0441\u043e\u0432</a></li> {% if user.is_authenticated %} <li><a href=\"{% url 'my_reservations' %}\">\u041c\u043e\u0438 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f</a></li> {% endif %} </ul> <ul class=\"navbar-right\"> {% if user.is_authenticated %} <li> <form action=\"{% url 'logout' %}\" method=\"post\" class=\"logout-form\"> {% csrf_token %} <button type=\"submit\" class=\"logout-button\">\u0412\u044b\u0439\u0442\u0438</button> </form> </li> {% else %} <li><a href=\"{% url 'signup' %}\">\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f</a></li> <li><a href=\"{% url 'login' %}\">\u0412\u043e\u0439\u0442\u0438</a></li> {% endif %} </ul> </nav> \u041f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u041f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u0430 \u0432 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f\u0445 \u0441\u043f\u0438\u0441\u043a\u043e\u0432 \u0440\u0435\u0439\u0441\u043e\u0432 \u0438 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 \u0434\u043b\u044f \u0443\u0434\u043e\u0431\u043d\u043e\u0439 \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438. \u041f\u0440\u0438\u043c\u0435\u0440 \u0448\u0430\u0431\u043b\u043e\u043d\u0430 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0438: <div class=\"pagination\"> <span class=\"step-links\"> {% if page_obj.has_previous %} <a href=\"?page=1\">&laquo; \u041f\u0435\u0440\u0432\u0430\u044f</a> <a href=\"?page={{ page_obj.previous_page_number }}\">\u041d\u0430\u0437\u0430\u0434</a> {% endif %} <span class=\"current\"> \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 {{ page_obj.number }} \u0438\u0437 {{ page_obj.paginator.num_pages }} </span> {% if page_obj.has_next %} <a href=\"?page={{ page_obj.next_page_number }}\">\u0412\u043f\u0435\u0440\u0435\u0434</a> <a href=\"?page={{ page_obj.paginator.num_pages }}\">\u041f\u043e\u0441\u043b\u0435\u0434\u043d\u044f\u044f &raquo;</a> {% endif %} </span> </div> \u041f\u043e\u0438\u0441\u043a \u043f\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c \u0441 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0435\u0439 \u041d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d \u043f\u043e\u0438\u0441\u043a \u043f\u043e \u043f\u043e\u043b\u044f\u043c \u0440\u0435\u0439\u0441\u0430 \u0438 \u0430\u0432\u0438\u0430\u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438 \u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0438. \u041f\u0440\u0438\u043c\u0435\u0440: class MyReservationsView(LoginRequiredMixin, ListView): model = Reservation template_name = 'my_reservations.html' paginate_by = 10 def get_queryset(self): queryset = Reservation.objects.filter(user=self.request.user).order_by('-created_at') query = self.request.GET.get('q') if query: queryset = queryset.filter( flight__flight_number__icontains=query ) | queryset.filter( flight__airline__icontains=query ) return queryset","title":"Lab 2"},{"location":"lab2/#flights-board","text":"","title":"Flights Board"},{"location":"lab2/#_1","text":"Flights Board \u2014 \u044d\u0442\u043e Django-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435, \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0435\u0435 \u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0443 \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0440\u0435\u0439\u0441\u0430\u0445, \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u0435\u0441\u0442, \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\u043c\u0438 \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043e \u0440\u0435\u0439\u0441\u0430\u0445. \u0412 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0438 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u0438\u0432\u043d\u0430\u044f \u043f\u0430\u043d\u0435\u043b\u044c \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0440\u0435\u0439\u0441\u0430\u043c\u0438.","title":"\u041e\u0431\u0437\u043e\u0440"},{"location":"lab2/#_2","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0432\u0435\u0431 \u0441\u0435\u0440\u0432\u0438\u0441, \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u043c \u0438\u0437 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0412\u0430\u0440\u0438\u0430\u043d\u0442 3: \u0422\u0430\u0431\u043b\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431 \u0430\u0432\u0438\u0430\u043f\u0435\u0440\u0435\u043b\u0435\u0442\u0430\u0445 \u0425\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043d\u043e\u043c\u0435\u0440\u0435 \u0440\u0435\u0439\u0441\u0430, \u0430\u0432\u0438\u0430\u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438, \u043e\u0442\u043b\u0435\u0442\u0435, \u043f\u0440\u0438\u043b\u0435\u0442\u0435, \u0442\u0438\u043f\u0435 (\u043f\u0440\u0438\u043b\u0435\u0442, \u043e\u0442\u043b\u0435\u0442), \u043d\u043e\u043c\u0435\u0440\u0435 \u0433\u0435\u0439\u0442\u0430. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: - \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. - \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0438 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u0435\u0441\u0442 \u043d\u0430 \u0440\u0435\u0439\u0441\u0430\u0445. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0441\u0432\u043e\u0438\u0445 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439. - \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043d\u0430 \u0440\u0435\u0439\u0441 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u0430 \u0438 \u0432\u043f\u0438\u0441\u0430\u0442\u044c \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u043d\u043e\u043c\u0435\u0440 \u0435\u0433\u043e \u0431\u0438\u043b\u0435\u0442\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin. - \u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0449\u0430\u044f \u0432\u0441\u0435\u0445 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432 \u0440\u0435\u0439\u0441\u0430. - \u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043a \u0440\u0435\u0439\u0441\u0430\u043c. \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432, \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f \u0434\u0430\u0442\u0430 \u0440\u0435\u0439\u0441\u0430, \u0442\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f, \u0440\u0435\u0439\u0442\u0438\u043d\u0433 (1-10), \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0442\u043e\u0440\u0435. \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f: - \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u0435\u043d\u044e - \u0420\u0435\u0430\u043b\u0438\u0437\u0432\u0430\u0442\u044c \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446 - \u0412\u043d\u0435\u0434\u0440\u0438\u0442\u044c \u043f\u043e\u0438\u0441\u043a \u043f\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c, \u0441 \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u0430 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044f","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435:"},{"location":"lab2/#_3","text":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u041c\u043e\u0434\u0435\u043b\u0438 \u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0440\u0435\u0439\u0441\u0430\u043c\u0438 \u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\u043c\u0438 \u041e\u0442\u0437\u044b\u0432\u044b \u043e \u0440\u0435\u0439\u0441\u0430\u0445 \u041f\u043e\u0438\u0441\u043a \u0438 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044f \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f","title":"\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435"},{"location":"lab2/#_4","text":"\u041a\u043b\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f bash git clone <repository-url> cd flights_board \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439 bash pip install -r requirements.txt \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0412 \u0444\u0430\u0439\u043b\u0435 settings.py \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u0442\u0435 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 PostgreSQL: python DATABASES = { 'default': { 'ENGINE': 'django.db.backends.postgresql', 'NAME': 'postgres', 'USER': 'postgres', 'PASSWORD': 'postgres', 'HOST': 'localhost', 'PORT': '5431', } } \u041f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0439 bash python manage.py migrate \u0417\u0430\u043f\u0443\u0441\u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 bash python manage.py runserver","title":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430"},{"location":"lab2/#_5","text":"\u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u043d\u0430\u0445\u043e\u0434\u044f\u0442\u0441\u044f \u0432 flights_board/flights/models.py : Flight (\u0420\u0435\u0439\u0441): \u0425\u0440\u0430\u043d\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0440\u0435\u0439\u0441\u0435, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u043d\u043e\u043c\u0435\u0440, \u0430\u0432\u0438\u0430\u043a\u043e\u043c\u043f\u0430\u043d\u0438\u044e, \u0432\u0440\u0435\u043c\u044f \u0432\u044b\u043b\u0435\u0442\u0430 \u0438 \u043f\u0440\u0438\u043b\u0435\u0442\u0430, \u043d\u043e\u043c\u0435\u0440 \u0433\u0435\u0439\u0442\u0430. Reservation (\u0411\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435): \u0421\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0441 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u043c\u0438 \u0440\u0435\u0439\u0441\u0430\u043c\u0438, \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044f \u043c\u0435\u0441\u0442\u043e \u0438 \u043d\u043e\u043c\u0435\u0440 \u0431\u0438\u043b\u0435\u0442\u0430. Review (\u041e\u0442\u0437\u044b\u0432): \u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u043e\u0442\u0437\u044b\u0432 \u043e \u0440\u0435\u0439\u0441\u0435, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0442\u0435\u043a\u0441\u0442, \u0440\u0435\u0439\u0442\u0438\u043d\u0433 \u0438 \u0434\u0430\u0442\u0443. \u041f\u0440\u0438\u043c\u0435\u0440 \u043c\u043e\u0434\u0435\u043b\u0438 Flight : class Flight(models.Model): flight_number = models.CharField(max_length=10) airline = models.CharField(max_length=50) departure = models.DateTimeField() arrival = models.DateTimeField() gate_number = models.CharField(max_length=5)","title":"\u041c\u043e\u0434\u0435\u043b\u0438"},{"location":"lab2/#_6","text":"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f : /signup/ , \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 UserCreationForm . \u0412\u0445\u043e\u0434/\u0412\u044b\u0445\u043e\u0434 : /login/ \u0434\u043b\u044f \u0432\u0445\u043e\u0434\u0430, POST-\u0437\u0430\u043f\u0440\u043e\u0441 \u043f\u043e /logout/ \u0434\u043b\u044f \u0432\u044b\u0445\u043e\u0434\u0430.","title":"\u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439"},{"location":"lab2/#_7","text":"\u0421\u043f\u0438\u0441\u043e\u043a \u0440\u0435\u0439\u0441\u043e\u0432 \u0413\u043b\u0430\u0432\u043d\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 / \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0440\u0435\u0439\u0441\u043e\u0432 \u0441 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c\u044e \u043f\u043e\u0438\u0441\u043a\u0430 \u043f\u043e \u043d\u043e\u043c\u0435\u0440\u0443 \u0438\u043b\u0438 \u0430\u0432\u0438\u0430\u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438. \u0414\u0435\u0442\u0430\u043b\u0438 \u0440\u0435\u0439\u0441\u0430 \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0434\u0435\u0442\u0430\u043b\u044f\u043c\u0438 \u0440\u0435\u0439\u0441\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430 \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 /flight/<flight_id>/ , \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044f \u043e\u0441\u043d\u043e\u0432\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e, \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432 \u0438 \u043e\u0442\u0437\u044b\u0432\u044b.","title":"\u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0440\u0435\u0439\u0441\u0430\u043c\u0438"},{"location":"lab2/#_8","text":"\u0411\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u0435\u0441\u0442\u0430 \u2014 /flight/<flight_id>/reserve/ \u0441 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u043e\u0439 \u0437\u0430\u043d\u044f\u0442\u043e\u0441\u0442\u0438 \u043c\u0435\u0441\u0442\u0430. \u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u2014 /reservation/<reservation_id>/edit/ . \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u2014 POST-\u0437\u0430\u043f\u0440\u043e\u0441 \u043f\u043e /reservation/<reservation_id>/delete/ . \u041f\u0440\u0438\u043c\u0435\u0440 \u043a\u043e\u0434\u0430 \u0434\u043b\u044f \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u0435\u0441\u0442\u0430: @login_required def reserve_seat(request, flight_id): flight = get_object_or_404(Flight, id=flight_id) if request.method == 'POST': seat_number = request.POST.get('seat_number') if Reservation.objects.filter(flight=flight, seat_number=seat_number).exists(): return render(request, 'reserve_seat.html', { 'flight': flight, 'error': \"\u042d\u0442\u043e \u043c\u0435\u0441\u0442\u043e \u0443\u0436\u0435 \u0437\u0430\u043d\u044f\u0442\u043e. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0434\u0440\u0443\u0433\u043e\u0435.\" }) Reservation.objects.create(user=request.user, flight=flight, seat_number=seat_number) return redirect('my_reservations') return render(request, 'reserve_seat.html', {'flight': flight})","title":"\u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\u043c\u0438"},{"location":"lab2/#_9","text":"\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u043c\u043e\u0433\u0443\u0442 \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u043e\u0442\u0437\u044b\u0432\u044b \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0440\u0435\u0439\u0441\u0430, \u0432\u043a\u043b\u044e\u0447\u0430\u044f: - \u0420\u0435\u0439\u0442\u0438\u043d\u0433 (\u043e\u0442 1 \u0434\u043e 10) - \u0422\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f - \u0414\u0430\u0442\u0430 \u0438 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0442\u043e\u0440\u0435 \u0424\u043e\u0440\u043c\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u0430: @login_required def add_review(request, flight_id): flight = get_object_or_404(Flight, id=flight_id) if request.method == 'POST': rating = request.POST['rating'] comment_text = request.POST['comment_text'] Review.objects.create(flight=flight, user=request.user, rating=rating, comment_text=comment_text) return redirect('flight_list') return render(request, 'add_review.html', {'flight': flight})","title":"\u041e\u0442\u0437\u044b\u0432\u044b \u043e \u0440\u0435\u0439\u0441\u0430\u0445"},{"location":"lab2/#_10","text":"\u0412 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u044b \u043f\u043e\u0438\u0441\u043a \u0438 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044f \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430\u0445 \u0441\u043f\u0438\u0441\u043a\u0430 \u0440\u0435\u0439\u0441\u043e\u0432 \u0438 \u043b\u0438\u0447\u043d\u044b\u0445 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439. \u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u043e\u0438\u0441\u043a\u0430 \u0432 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u0441\u043f\u0438\u0441\u043a\u0430 \u0440\u0435\u0439\u0441\u043e\u0432: class FlightListView(ListView): model = Flight template_name = 'flight_list.html' paginate_by = 2 def get_queryset(self): query = self.request.GET.get('q') queryset = Flight.objects.all() if query: queryset = queryset.filter( flight_number__icontains=query ) | queryset.filter( airline__icontains=query ) return queryset","title":"\u041f\u043e\u0438\u0441\u043a \u0438 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044f"},{"location":"lab2/#_11","text":"","title":"\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f"},{"location":"lab2/#_12","text":"\u041d\u0430 \u043a\u0430\u0436\u0434\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0435 \u043c\u0435\u043d\u044e \u0441 \u0441\u0441\u044b\u043b\u043a\u0430\u043c\u0438 \u043d\u0430 \u0441\u043f\u0438\u0441\u043e\u043a \u0440\u0435\u0439\u0441\u043e\u0432, \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044e, \u0432\u0445\u043e\u0434/\u0432\u044b\u0445\u043e\u0434 \u0438 \u043b\u0438\u0447\u043d\u044b\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u041f\u0440\u0438\u043c\u0435\u0440 \u043c\u0435\u043d\u044e \u0432 \u0448\u0430\u0431\u043b\u043e\u043d\u0435 base.html : <nav class=\"main-nav\"> <ul class=\"navbar-left\"> <li><a href=\"{% url 'flight_list' %}\">\u0421\u043f\u0438\u0441\u043e\u043a \u0440\u0435\u0439\u0441\u043e\u0432</a></li> {% if user.is_authenticated %} <li><a href=\"{% url 'my_reservations' %}\">\u041c\u043e\u0438 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f</a></li> {% endif %} </ul> <ul class=\"navbar-right\"> {% if user.is_authenticated %} <li> <form action=\"{% url 'logout' %}\" method=\"post\" class=\"logout-form\"> {% csrf_token %} <button type=\"submit\" class=\"logout-button\">\u0412\u044b\u0439\u0442\u0438</button> </form> </li> {% else %} <li><a href=\"{% url 'signup' %}\">\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f</a></li> <li><a href=\"{% url 'login' %}\">\u0412\u043e\u0439\u0442\u0438</a></li> {% endif %} </ul> </nav>","title":"\u041c\u0435\u043d\u044e"},{"location":"lab2/#_13","text":"\u041f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u0430 \u0432 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f\u0445 \u0441\u043f\u0438\u0441\u043a\u043e\u0432 \u0440\u0435\u0439\u0441\u043e\u0432 \u0438 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 \u0434\u043b\u044f \u0443\u0434\u043e\u0431\u043d\u043e\u0439 \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438. \u041f\u0440\u0438\u043c\u0435\u0440 \u0448\u0430\u0431\u043b\u043e\u043d\u0430 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0438: <div class=\"pagination\"> <span class=\"step-links\"> {% if page_obj.has_previous %} <a href=\"?page=1\">&laquo; \u041f\u0435\u0440\u0432\u0430\u044f</a> <a href=\"?page={{ page_obj.previous_page_number }}\">\u041d\u0430\u0437\u0430\u0434</a> {% endif %} <span class=\"current\"> \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 {{ page_obj.number }} \u0438\u0437 {{ page_obj.paginator.num_pages }} </span> {% if page_obj.has_next %} <a href=\"?page={{ page_obj.next_page_number }}\">\u0412\u043f\u0435\u0440\u0435\u0434</a> <a href=\"?page={{ page_obj.paginator.num_pages }}\">\u041f\u043e\u0441\u043b\u0435\u0434\u043d\u044f\u044f &raquo;</a> {% endif %} </span> </div>","title":"\u041f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446"},{"location":"lab2/#_14","text":"\u041d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d \u043f\u043e\u0438\u0441\u043a \u043f\u043e \u043f\u043e\u043b\u044f\u043c \u0440\u0435\u0439\u0441\u0430 \u0438 \u0430\u0432\u0438\u0430\u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438 \u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0438. \u041f\u0440\u0438\u043c\u0435\u0440: class MyReservationsView(LoginRequiredMixin, ListView): model = Reservation template_name = 'my_reservations.html' paginate_by = 10 def get_queryset(self): queryset = Reservation.objects.filter(user=self.request.user).order_by('-created_at') query = self.request.GET.get('q') if query: queryset = queryset.filter( flight__flight_number__icontains=query ) | queryset.filter( flight__airline__icontains=query ) return queryset","title":"\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c \u0441 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0435\u0439"}]}